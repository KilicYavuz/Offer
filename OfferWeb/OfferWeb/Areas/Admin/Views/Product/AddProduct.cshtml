@using Entities.Models
@model Product
@{
    ViewBag.Title = "AddProduct";
}

<link href="~/Assets/inspinia/css/plugins/chosen/bootstrap-chosen.css" rel="stylesheet" />
<link href="~/Assets/inspinia/css/plugins/chosen/chosen.css" rel="stylesheet" />
<link href="~/Assets/inspinia/css/plugins/jasny/jasny-bootstrap.min.css" rel="stylesheet" />


<div class="wrapper wrapper-content animated fadeInRight">

    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>Ürün Ekle</h5>
                </div>
                <div class="ibox-content">
                    @using (Html.BeginForm("SaveProduct", "Product", FormMethod.Post, new { @class = "form-horizontal", @id = "productform", enctype = "multipart/form-data" }))
                    {
                        @Html.HiddenFor(model => model.Oid)
                        @Html.HiddenFor(model => model.CreatedDate)
                        @*@Html.HiddenFor(model => model.UpdatedDate)*@
                        @Html.HiddenFor(model => model.Image)
                        <div class="form-group">
                            <label class="col-sm-2 control-label">Adı</label>
                            <div class="col-sm-10">
                                @Html.TextBoxFor(x => x.Name, new { @class = "form-control", name = "Name", required = "required", value = Model.Name })
                            </div>
                        </div>
                        @*<div class="hr-line-dashed"></div>*@
                        <div class="form-group">
                            <label class="col-sm-2 control-label">Marka</label>
                            <div class="col-sm-10">
                                @Html.DropDownListFor(model => model.BrandOid, new SelectList(ViewBag.Data["Brands"], "Oid", "Name"),
                                                "-- Marka Seçiniz  --", new { @class = "form-control", name = "BrandOid", required = "required" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-2 control-label">Kategori</label>
                            <div class="col-sm-10">
                                @Html.DropDownListFor(model => model.CategoryOid, new SelectList(ViewBag.Data["Categories"], "Oid", "Name"),
                                                "-- Kategori Seçiniz  --", new { @class = "form-control", name = "CategoryOid", required = "required" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-2 control-label">Durum</label>
                            <div class="col-sm-10">
                                @Html.DropDownListFor(model => model.State, Enum.GetNames(typeof(Entities.Enums.ItemState)).Select(e => new SelectListItem { Text = e }))

                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-2 control-label">Tagler</label>
                            <div class="col-sm-10">
                                @Html.ListBoxFor(model => model.SelectedTags, new MultiSelectList(Model.TagList, "Oid", "Name"), new { id = "productTagsMultiSelect", multiple = "multiple" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-2 control-label">Fiyat</label>
                            <div class="col-sm-10">
                                @Html.TextBoxFor(x => x.Price, new { @class = "form-control", name = "Price", required = "required", value = Model.Price })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-2 control-label">Stok</label>
                            <div class="col-sm-10">
                                @Html.TextBoxFor(x => x.Stock, new { @class = "form-control", name = "Stock", required = "required", value = Model.Stock })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-2 control-label">Kısa Açıklama</label>
                            <div class="col-sm-10">
                                @Html.TextBoxFor(x => x.ShortDescription, new { @class = "form-control", name = "ShortDescription", required = "required", value = Model.ShortDescription })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-2 control-label">Uzun Açıklama</label>
                            <div class="col-sm-10">
                                @Html.TextAreaFor(x => x.Description, new { @class = "form-control", name = "Description", required = "required", value = Model.Description })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-2 control-label">Image</label>
                            <div class="col-sm-10">
                                @*@Html.TextBoxFor(x => x.Image, new { @class = "form-control", name = "Image", required = "required", value = Model.Image })*@
                                <div class="fileinput fileinput-new" data-provides="fileinput">
                                    <span class="btn btn-default btn-file">
                                        <span class="fileinput-new">Resim Seçiniz</span>
                                        <span class="fileinput-exists">Düzenle</span>
                                        <input type="file" name="ImageFile" value="Model.ImageFile" onchange="readURL(this);" />
                                    </span>
                                    <span id="myText" class="fileinput-filename"></span>
                                    <a href="#" class="close fileinput-exists" data-dismiss="fileinput" style="float: none">×</a>
                                    <img id="imgModel" src="@String.Format("data:image/gif;base64,{0}", Model.Image)" alt="your image" />
                                    <p style="color:red; display: none;"><i>Uyarı</i></p>
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-sm-4 col-sm-offset-2">
                                <button class="btn btn-primary" type="submit">Kaydet</button>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<script src="~/Assets/inspinia/js/jquery-3.1.1.min.js"></script>
<script src="~/Assets/inspinia/js/plugins/chosen/chosen.jquery.js"></script>
<script src="~/Assets/inspinia/js/plugins/jasny/jasny-bootstrap.min.js"></script>

<script>

    $('.chosen-select').chosen({ width: "100%" });
    $('#productTagsMultiSelect').chosen({ width: "100%" });

    function readURL(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();

            reader.onload = function (e) {
                $('#imgModel')
                    .attr('src', e.target.result)
                    .width(64)
                    .height(64);
            };

            reader.readAsDataURL(input.files[0]);
        }
    }
</script>
